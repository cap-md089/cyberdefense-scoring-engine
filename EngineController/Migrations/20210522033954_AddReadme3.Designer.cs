// <auto-generated />
using System;
using EngineController.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EngineController.Migrations
{
    [DbContext(typeof(EngineControllerContext))]
    [Migration("20210522033954_AddReadme3")]
    partial class AddReadme3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("EngineController.Models.AppliedCompetitionPenalty", b =>
                {
                    b.Property<int>("CompetitionPenaltyID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamID1")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompetitionPenaltyID", "TeamID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TeamID1");

                    b.ToTable("AppliedCompetitionPenalties");
                });

            modelBuilder.Entity("EngineController.Models.CompetitionPenalty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PenaltyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PenaltyScript")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScriptType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SystemIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CompetitionPenalties");
                });

            modelBuilder.Entity("EngineController.Models.CompetitionTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScriptType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SystemIdentifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidationScript")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CompetitionTasks");
                });

            modelBuilder.Entity("EngineController.Models.CompletedCompetitionTask", b =>
                {
                    b.Property<int>("CompetitionTaskID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamID1")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompetitionTaskID", "TeamID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TeamID1");

                    b.ToTable("CompletedCompetitionTasks");
                });

            modelBuilder.Entity("EngineController.Models.Readme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Readme");
                });

            modelBuilder.Entity("EngineController.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("EngineController.Models.AppliedCompetitionPenalty", b =>
                {
                    b.HasOne("EngineController.Models.CompetitionPenalty", "CompetitionPenalty")
                        .WithMany()
                        .HasForeignKey("CompetitionPenaltyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineController.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineController.Models.Team", null)
                        .WithMany("AppliedCompetitionPenalties")
                        .HasForeignKey("TeamID1");

                    b.Navigation("CompetitionPenalty");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("EngineController.Models.CompletedCompetitionTask", b =>
                {
                    b.HasOne("EngineController.Models.CompetitionTask", "CompetitionTask")
                        .WithMany()
                        .HasForeignKey("CompetitionTaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineController.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineController.Models.Team", null)
                        .WithMany("CompletedCompetitionTasks")
                        .HasForeignKey("TeamID1");

                    b.Navigation("CompetitionTask");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("EngineController.Models.Team", b =>
                {
                    b.Navigation("AppliedCompetitionPenalties");

                    b.Navigation("CompletedCompetitionTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
